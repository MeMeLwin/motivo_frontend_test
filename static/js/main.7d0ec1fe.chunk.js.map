{"version":3,"sources":["components/MovieBox.js","App.js","components/Navigation.js","components/WatchMovie.js","components/WatchList.js","components/SideBar.js","serviceWorker.js","index.js"],"names":["MovieBox","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","items","event","id","target","addToWatchList","console","log","react_default","a","createElement","key","movie","style","width","height","paddingTop","color","float","className","alt","src","poster","title","overview","textAlign","release_date","vote_average","Component","App","displayPopularMovies","displayTopRatedMovies","displayUpcomingMovies","displayNowPlayingMovies","displayAll","_this2","$","ajax","url","success","searchResults","results","movieBoxes","forEach","poster_path","movieBox","src_components_MovieBox","push","setState","rows","error","xhr","status","err","_this3","_this4","_this5","_this6","searchTerm","_this7","urlString","value","trim","performSearch","href","onClick","bind","fontSize","display","paddingBottom","onChange","searchChangeHandler","placeholder","reactstrap_es","position","maxHeight","overflowY","overflowX","Navigation","NavLink","to","WatchMovie","removeFromWatchList","handleRemove","WatchList","components_WatchMovie","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7d0ec1fe.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./MovieBox.css\";\r\nclass MovieBox extends Component {\r\n  state = { items: [] };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    var watchMovies = { items: [] };\r\n    //this.state = { items: [] };\r\n  }\r\n  handleAdd(event) {\r\n    const id = event.target.id;\r\n    this.addToWatchList(id);\r\n  }\r\n  addToWatchList(id) {\r\n    console.log(\"add to watchList : \" + id);\r\n    // var watchList = [];\r\n    // if (localStorage.getItem(\"watchList\") !== null) {\r\n    //   watchList = localStorage.getItem(\"watchList\");\r\n    // }\r\n    // watchList.concat(id);\r\n    // localStorage.setItem(\"watchList\", watchList);\r\n    // console.log(localStorage.getItem(\"watchList\").value);\r\n  }\r\n  render() {\r\n    //let genresList = JSON.stringify(this.props.movie.genres);\r\n\r\n    return (\r\n      <div\r\n        key={this.props.movie.id}\r\n        style={{\r\n          width: 200,\r\n          height: 400,\r\n          paddingTop: 25,\r\n          color: \"#00cca3\",\r\n          float: \"left\"\r\n        }}\r\n      >\r\n        <div className=\"poster-container\">\r\n          <div className=\"poster\">\r\n            <img alt=\"poster\" src={this.props.movie.poster} />\r\n            <div className=\"hoverText\">\r\n              <strong>{this.props.movie.title}</strong>\r\n              <p>{this.props.movie.overview}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <center>\r\n          <div className=\"title\">\r\n            {this.props.movie.title}\r\n            <br />\r\n            <span style={{ textAlign: \"right\" }}>Genres:</span>\r\n            <span>Fantasy</span>\r\n            <span style={{ textAlign: \"left\" }}>Year:</span>\r\n            <span>{this.props.movie.release_date}</span>\r\n          </div>\r\n        </center>\r\n        <center>\r\n          <div className=\"vote\">{this.props.movie.vote_average}</div>\r\n        </center>\r\n\r\n        <br />\r\n        <br />\r\n        {/* <button id={this.props.movie.id} onClick={this.handleAdd.bind(this)}>\r\n          ADD\r\n        </button> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieBox;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport $ from \"jquery\";\nimport MovieBox from \"./components/MovieBox.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button } from \"reactstrap\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.displayPopularMovies();\n    this.displayTopRatedMovies();\n    this.displayUpcomingMovies();\n    this.displayNowPlayingMovies();\n    this.displayAll();\n  }\n  //Show All Movies using api key from TMDb\n  displayAll() {\n    const urlString =\n      \"https://api.themoviedb.org/3/movie/popular?api_key=9b2369d7210e25238f707ddca60ddd85&language=en-US&page=3\";\n\n    $.ajax({\n      url: urlString,\n      success: searchResults => {\n        console.log(\"fetch data success\");\n        const results = searchResults.results;\n        var movieBoxes = [];\n        results.forEach(movie => {\n          movie.poster = \"https://image.tmdb.org/t/p/w185\" + movie.poster_path;\n\n          const movieBox = <MovieBox key={movie.id} movie={movie} />;\n          movieBoxes.push(movieBox);\n        });\n        this.setState({ rows: movieBoxes });\n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\");\n      }\n    });\n  }\n\n  //Show Popular Movies using api key from TMDb\n  displayPopularMovies() {\n    const urlString =\n      \"https://api.themoviedb.org/3/movie/popular?api_key=9b2369d7210e25238f707ddca60ddd85&language=en-US&page=1\";\n\n    $.ajax({\n      url: urlString,\n      success: searchResults => {\n        console.log(\"fetch data success\");\n        const results = searchResults.results;\n        var movieBoxes = [];\n        results.forEach(movie => {\n          movie.poster = \"https://image.tmdb.org/t/p/w185\" + movie.poster_path;\n\n          const movieBox = <MovieBox key={movie.id} movie={movie} />;\n          movieBoxes.push(movieBox);\n        });\n        this.setState({ rows: movieBoxes });\n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\");\n      }\n    });\n  }\n\n  //Show Top Rated Movies using api key from TMDb\n  displayTopRatedMovies() {\n    const urlString =\n      \"https://api.themoviedb.org/3/movie/top_rated?api_key=9b2369d7210e25238f707ddca60ddd85\";\n\n    $.ajax({\n      url: urlString,\n      success: searchResults => {\n        console.log(\"fetch data success\");\n        const results = searchResults.results;\n        var movieBoxes = [];\n        results.forEach(movie => {\n          movie.poster = \"https://image.tmdb.org/t/p/w185\" + movie.poster_path;\n\n          const movieBox = <MovieBox key={movie.id} movie={movie} />;\n          movieBoxes.push(movieBox);\n        });\n        this.setState({ rows: movieBoxes });\n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\");\n      }\n    });\n  }\n\n  //Show Upcoming Movies using api key from TMDb\n  displayUpcomingMovies() {\n    const urlString =\n      \"https://api.themoviedb.org/3/movie/upcoming?api_key=9b2369d7210e25238f707ddca60ddd85&language=en-US&page=2\";\n\n    $.ajax({\n      url: urlString,\n      success: searchResults => {\n        console.log(\"fetch data success\");\n        const results = searchResults.results;\n        var movieBoxes = [];\n        results.forEach(movie => {\n          movie.poster = \"https://image.tmdb.org/t/p/w185\" + movie.poster_path;\n\n          const movieBox = <MovieBox key={movie.id} movie={movie} />;\n          movieBoxes.push(movieBox);\n        });\n        this.setState({ rows: movieBoxes });\n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\");\n      }\n    });\n  }\n\n  //Show Now Playing Movies using api key from TMDb\n  displayNowPlayingMovies() {\n    const urlString =\n      \"https://api.themoviedb.org/3/movie/now_playing?api_key=9b2369d7210e25238f707ddca60ddd85&language=en-US&page=1\";\n\n    $.ajax({\n      url: urlString,\n      success: searchResults => {\n        console.log(\"fetch data success\");\n        const results = searchResults.results;\n        var movieBoxes = [];\n        results.forEach(movie => {\n          movie.poster = \"https://image.tmdb.org/t/p/w185\" + movie.poster_path;\n\n          const movieBox = <MovieBox key={movie.id} movie={movie} />;\n          movieBoxes.push(movieBox);\n        });\n        this.setState({ rows: movieBoxes });\n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\");\n      }\n    });\n  }\n\n  //Search Movies\n  performSearch(searchTerm) {\n    const urlString =\n      \"https://api.themoviedb.org/3/search/movie?api_key=9b2369d7210e25238f707ddca60ddd85&query=\" +\n      searchTerm;\n\n    $.ajax({\n      url: urlString,\n      success: searchResults => {\n        console.log(\"fetch data success\");\n        const results = searchResults.results;\n        var movieBoxes = [];\n        results.forEach(movie => {\n          movie.poster = \"https://image.tmdb.org/t/p/w185\" + movie.poster_path;\n\n          const movieBox = <MovieBox key={movie.id} movie={movie} />;\n          movieBoxes.push(movieBox);\n        });\n        this.setState({ rows: movieBoxes });\n      },\n      error: (xhr, status, err) => {\n        console.error(\"Failed to fetch data\");\n      }\n    });\n  }\n\n  //Handler for performSearch\n  searchChangeHandler(event) {\n    const searchTerm = event.target.value;\n    if (searchTerm.trim() === \"\") {\n      this.displayAll();\n    } else {\n      this.performSearch(searchTerm);\n    }\n  }\n\n  render() {\n    let lgClose = () => this.setState({ lgShow: false });\n    return (\n      <div className=\"App\">\n        <table className=\"titleBar\">\n          <tbody>\n            <tr>\n              <td>\n                <a\n                  className=\"link\"\n                  href=\"#\"\n                  onClick={this.displayAll.bind(this)}\n                >\n                  All Movies\n                </a>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <input\n          className=\"searchBox\"\n          style={{\n            fontSize: 14,\n            display: \"block\",\n            width: \"98%\",\n            paddingTop: 8,\n            paddingBottom: 8,\n            color: \"white\"\n          }}\n          onChange={this.searchChangeHandler.bind(this)}\n          placeholder=\"Search...\"\n        />\n        <br />\n\n        <div className=\"button-div\">\n          <Button\n            className=\"btn\"\n            onClick={this.displayPopularMovies.bind(this)}\n          >\n            POPULAR\n          </Button>{\" \"}\n          <Button\n            className=\"btn\"\n            onClick={this.displayTopRatedMovies.bind(this)}\n          >\n            TOP RATED\n          </Button>{\" \"}\n          <Button\n            className=\"btn\"\n            onClick={this.displayUpcomingMovies.bind(this)}\n          >\n            UPCOMING\n          </Button>{\" \"}\n          <Button\n            className=\"btn\"\n            onClick={this.displayNowPlayingMovies.bind(this)}\n          >\n            NOW PLAYING\n          </Button>{\" \"}\n        </div>\n        <div\n          style={{\n            position: \"relative\",\n            maxHeight: \"550px\",\n            overflowY: \"scroll\",\n            overflowX: \"hidden\"\n          }}\n        >\n          {this.state.rows}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nclass Navigation extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavLink to=\"/\" />\r\n        <NavLink to=\"/watchlist\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React, { Component } from \"react\";\r\nclass WatchMovie extends Component {\r\n  state = {};\r\n  handleRemove(event) {\r\n    const id = event.target.id;\r\n    this.removeFromWatchList(id);\r\n  }\r\n  removeFromWatchList(id) {\r\n    console.log(\"remove from watch list: \" + id);\r\n  }\r\n  render() {\r\n    return (\r\n      <div\r\n        key={this.props.movie.id}\r\n        style={{\r\n          width: 250,\r\n          height: 400,\r\n          paddingTop: 5,\r\n          color: \"white\",\r\n          float: \"left\"\r\n        }}\r\n      >\r\n        <img alt=\"poster\" src={this.props.movie.poster} />\r\n        <br />\r\n        {this.props.movie.title}\r\n        <br />\r\n        <button id={this.props.movie.id} onClick={this.handleRemove.bind(this)}>\r\n          Remove\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WatchMovie;\r\n","import React, { Component } from \"react\";\r\nimport \"D:/ThalesCode/FrontEndTest/motivo_frontend_test/src/App.css\";\r\nimport WatchMovie from \"./WatchMovie.js\";\r\nimport $ from \"jquery\";\r\n\r\nclass WatchList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.displayAll();\r\n  }\r\n  displayAll() {\r\n    const urlString =\r\n      \"https://api.themoviedb.org/3/discover/movie?api_key=4ccda7a34189fcea2fc752a6ee339500\";\r\n\r\n    $.ajax({\r\n      url: urlString,\r\n      success: searchResults => {\r\n        console.log(\"fetch data success\");\r\n        const results = searchResults.results;\r\n        var movieBoxes = [];\r\n        results.forEach(movie => {\r\n          movie.poster = \"https://image.tmdb.org/t/p/w185\" + movie.poster_path;\r\n          // console.log(movie.poster_path);\r\n          const movieBox = <WatchMovie key={movie.id} movie={movie} />;\r\n          movieBoxes.push(movieBox);\r\n        });\r\n        this.setState({ rows: movieBoxes });\r\n      },\r\n      error: (xhr, status, err) => {\r\n        console.error(\"Failed to fetch data\");\r\n      }\r\n    });\r\n  }\r\n  performSearch(searchTerm) {\r\n    const urlString =\r\n      \"https://api.themoviedb.org/3/search/movie?api_key=4ccda7a34189fcea2fc752a6ee339500&query=\" +\r\n      searchTerm;\r\n\r\n    $.ajax({\r\n      url: urlString,\r\n      success: searchResults => {\r\n        console.log(\"fetch data success\");\r\n        const results = searchResults.results;\r\n        var movieBoxes = [];\r\n        results.forEach(movie => {\r\n          movie.poster = \"https://image.tmdb.org/t/p/w185\" + movie.poster_path;\r\n          //console.log(movie.poster_path);\r\n          const movieBox = <WatchMovie key={movie.id} movie={movie} />;\r\n          movieBoxes.push(movieBox);\r\n        });\r\n        this.setState({ rows: movieBoxes });\r\n      },\r\n      error: (xhr, status, err) => {\r\n        console.error(\"Failed to fetch data\");\r\n      }\r\n    });\r\n  }\r\n  searchChangeHandler(event) {\r\n    //console.log(event.target.value);\r\n    const searchTerm = event.target.value;\r\n    if (searchTerm.trim() === \"\") {\r\n      //console.log(\"empty here\");\r\n      this.displayAll();\r\n    } else {\r\n      this.performSearch(searchTerm);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <table className=\"titleBar\">\r\n          <tbody>\r\n            <tr>\r\n              <td>My WatchList</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <input\r\n          style={{\r\n            fontSize: 14,\r\n            display: \"block\",\r\n            width: \"100%\",\r\n            paddingTop: 8,\r\n            paddingBottom: 8\r\n          }}\r\n          onChange={this.searchChangeHandler.bind(this)}\r\n          placeholder=\"Search...\"\r\n        />\r\n        <hr />\r\n        <div\r\n          style={{\r\n            position: \"relative\",\r\n            maxHeight: \"550px\",\r\n            overflowY: \"scroll\",\r\n            overflowX: \"hidden\"\r\n          }}\r\n        >\r\n          {this.state.rows}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WatchList;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Navigation from \"./Navigation\";\r\nimport App from \"../App\";\r\nimport WatchList from \"./WatchList\";\r\nimport \"./SideBar.css\";\r\nclass SideBar extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div>\r\n          <div className=\"sidenav\">\r\n            <Navigation style={{ position: \"fix\" }} />\r\n          </div>\r\n          <div className=\"main\">\r\n            <Switch>\r\n              <Route path=\"/\" component={App} exact />\r\n              <Route path=\"/watchlist\" component={WatchList} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideBar;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport SideBar from \"./components/SideBar\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}